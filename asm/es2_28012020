.data 
A: .word 1 2 3 4 5 5 6 7 
m: .word 8
.text
.globl main
main:
	la $a0 , A
	la $a1 , m 
	lw $a1 , 0($a1)
	jal esercizio
	add $a0 , $0 , $v0 
	li $v0 , 1
	syscall
	li $v0 , 10
	syscall
esercizio: addi $sp , $sp , -20
	 sw $ra , 0($sp)
	 sw $s0 , 4($sp)
	 sw $s1 , 8($sp)
	 sw $s2 , 12($sp)
	 sw $s3 , 16($sp)
	 add $s0 , $a0 , $0 # a0 = &a
	 add $s1 , $a1 , $0 # $a1 = m
	 add $s2 , $0 ,$0  
	 add $s1 , $s1 , -1 # s1 = m-1
	 add $s3 , $0 , $0  # inizializzo a 0 
for: 	 slt $t0 , $s2 , $s1 
	 beq $t0 , $0 , exit_for 
	 lw $a0 , 0($s0) 
	 jal primo 
	 bne $v0 , $0 , sum
	 addi $s2 , $s2 , 1 # i++
	 addi $s0 , $s0 , 4 # A[i++] 
	 j for
sum: add $s3 , $s3 , $a0 
     addi $s2 , $s2 , 1 # i++
     addi $s0 , $s0 , 4 # A[i++] 
     j for
exit_for: add $v0 , $0 , $s3
	 lw $ra , 0($sp)
	 lw $s0 , 4($sp)
	 lw $s1 , 8($sp)
	 lw $s2 , 12($sp)
	 lw $s3 , 16($sp)
	 addi $sp , $sp , 20
	jr $ra
	
	